@inject SubjectService SubjectService
@inject DocsService DocsService
@inject AppState AppState

<MudPaper Outlined="true" Class="ma-3">
    <h3>Tematy</h3>
    <MudStack Row="true">
        @foreach (var subject in subjects)
        {
            <MudButton OnClick="@(() => SelectSubject(subject))" Variant="Variant.Filled" Size="Size.Small"
                       Color="selectedSubject==subject?Color.Primary:Color.Dark">@subject.Name</MudButton>
        }
    </MudStack>
</MudPaper>

@code {
    [CascadingParameter] public Task<AuthenticationState> AuthStateTask { get; set; }
    [Parameter] public EventCallback<Subject> OnSubjectSelected { get; set; }
    Subject selectedSubject;
    HashSet<Subject> subjects = [];

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthStateTask).User.Identity.IsAuthenticated?
            (await AuthStateTask).User.Identity.Name:string.Empty;
        
        subjects = (await SubjectService.GetSubjects(user)).data;
    }

    async Task SelectSubject(Subject? subject)
    {
        selectedSubject = subject;
        await OnSubjectSelected.InvokeAsync(selectedSubject);

        /*await  InvokeAsync(() =>
          {
              AppState.SetRecentSubjectId(subjectId);
              StateHasChanged();
          });*/
    }


}