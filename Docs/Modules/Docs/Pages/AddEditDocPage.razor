@namespace Docs.Modules.Items.Pages
@page "/add-doc/{isEdited:bool=true}"
@page "/edit-doc/{id?}"
@page "/doc-details/{id?}"

@attribute [Authorize]


<SectionContent SectionId="MainLayout.TopBarSectionRight">
    @if (!string.IsNullOrWhiteSpace(Id))
    {
        @*<MudButton Variant="Variant.Filled" Color="@(IsEdited ? Color.Warning : Color.Info)" OnClick="Edit">
            @(IsEdited ? "Wyjdź z edycji" : "Edytuj")
        </MudButton>*@
        <EditButton Colored="true" EditMode="@IsEdited" Text="@(IsEdited ? "Wyjdź z edycji" : "Edytuj")" OnClick="EditDoc">

        </EditButton>
    }
</SectionContent>


@if (Doc is null)
{
    <NoDataComp/>
}
else
{
    <EditForm Model="@Doc" OnValidSubmit="Submit">
        <DataAnnotationsValidator/>


        @* -----------FLEX-------- *@
        <MudElement HtmlTag="div" Class="d-flex flex-column gap-4" Style="height: 85vh;">


            @* <MudItem xs="12"> *@
            @* <MudPaper> *@
            @if (IsEdited)
            {
                <MudItem xs="12">
                    <MudTextField Label="Tytuł" HelperText="Wymagane. Max 200 znaków"
                                  @bind-Value="@Doc.Title" For="@(() => Doc.Title)" Disabled="!IsEdited"/>
                </MudItem>

                // CATEGORIES
                <MudItem xs="12">
                    <MudSelect T="CategoryVM" Label="Kategorie"
                               MultiSelection="true" SelectedValues="@Doc.Categories" SelectedValuesChanged="OnCategorySelected" Converter="@converter">
                        @if (allCategories is not null)
                        {
                            foreach (var category in allCategories)
                            {
                                <MudSelectItem Value="@category">@category.Name</MudSelectItem>
                            }
                        }
                    </MudSelect>
                </MudItem>
            }
            else
            {
                <MudElement HtmlTag="div">

                    <MudPaper Outlined="true" Class="pa-5 ">
                        <MudText Typo="Typo.h5">
                            @Doc.Title
                        </MudText>
                    </MudPaper>
                    @* <PageHeaderComp Name="@Doc.Title"/> *@
                </MudElement>
            }

            <MudElement HtmlTag="div" Class="d-flex flex-column flex-wrap-reverse align-content-space-between gap-4" Style="height: auto;">

              

                @* DESCRIPTION *@
                @if (IsEdited)
                {
                    <MudItem xs="12">
                        <MudTextField Label="Opis" HelperText="Max 5000 znaków" Lines="15"
                                      @bind-Value="@Doc.Description" For="@(() => Doc.Description)"Disabled="!IsEdited"/>
                    </MudItem>
                }
                else if (!string.IsNullOrWhiteSpace(Doc.Description))
                {
                    <MudElement HtmlTag="div"  Style="width: 46%; min-height: auto; overflow-y: hidden;">

                        <MudPaper Outlined="true" Class="pa-5">
                            <MudText>
                                @Doc.Description
                            </MudText>
                        </MudPaper>
                    </MudElement>
                    
                    <MudFlexBreak/>
                    
                }
                @* <MudFlexBreak /> *@
                
                @* SHORT DESCRIPTION *@
                @if (IsEdited)
                {
                <MudItem xs="12">
                    <MudTextField Label="Krótki opis" HelperText="Max 1000 znaków" Lines="5"
                                  @bind-Value="@Doc.ShortDescription" For="@(() => Doc.ShortDescription)" Disabled="!IsEdited"/>
                </MudItem>
                }
                else if (!string.IsNullOrWhiteSpace(Doc.ShortDescription))
                {
                <MudElement HtmlTag="div" Style="width: 46%"  >

                    <MudPaper Outlined="true" Class="pa-5">
                        <MudText>
                            @Doc.ShortDescription
                        </MudText>
                    </MudPaper>
                </MudElement>
                }
                
                
                @* LINKS *@
                <MudElement HtmlTag="div" Style="width: 46%" >

                    <MiniCrudComp Name="Linki" T="LinkVM" Model="@linkModel" Items="Doc.Links.ToHashSet()"EditMode="@(IsEdited)"
                                  Edited="link => isLinkEdited = link"
                                  OnSubmit="SubmitLink"
                                  OnEditItem="EditLink"
                                  OnRemoveItem="RemoveLink">

                        @* Edit *@
                        <EditFormContent>
                            <MudTextField Label="Url" @bind-Value="linkModel.Url" For="() => linkModel.Url"/>
                            <MudTextField Label="Nazwa" @bind-Value="linkModel.Name "/>
                            <MudTextField Label="Opis" @bind-Value="linkModel.Description"/>
                        </EditFormContent>

                        @* No edit *@
                        <NoEditedItemsTemplate Context="link">
                            <MudLink Target="_blank" Href="@link.Url" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(link.Name) ? link.Url : link.Name)</MudLink>
                            <MudText >@link.Description</MudText>
                        </NoEditedItemsTemplate>

                    </MiniCrudComp>
                </MudElement>


            </MudElement>


            @* SUBMIT *@
            @if (IsEdited)
            {
                <MudItem xs="12" Class="d-flex justify-end">
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Warning">Zapisz</MudButton>
                </MudItem>
            }
        </MudElement>


    </EditForm>
}