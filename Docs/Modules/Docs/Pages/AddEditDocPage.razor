@namespace Docs.Modules.Items.Pages
@page "/add-doc/{isEdited:bool=true}"
@page "/edit-doc/{id?}"
@page "/doc-details/{id?}"
@attribute [Authorize]


<SectionContent SectionId="MainLayout.TopBarSectionRight">
    @if (!string.IsNullOrWhiteSpace(Id))
    {
        @*<MudButton Variant="Variant.Filled" Color="@(IsEdited ? Color.Warning : Color.Info)" OnClick="Edit">
            @(IsEdited ? "Wyjdź z edycji" : "Edytuj")
        </MudButton>*@
    <EditButton Colored="true" EditMode="@IsEdited" Text="@(IsEdited ? "Wyjdź z edycji" : "Edytuj")"  OnClick="Edit">
            
        </EditButton>
    }
</SectionContent>


@if (Doc is null)
{
    <NoDataComp/>
}
else
{
    <EditForm Model="@Doc" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>

        <MudGrid>
            @* <MudItem xs="12"> *@
            @* <MudPaper> *@
            @if (IsEdited)
            {
                <MudItem xs="12">
                    <MudTextField Label="Tytuł" HelperText="Wymagane. Max 200 znaków"
                                  @bind-Value="@Doc.Title" For="@(() => Doc.Title)" Disabled="!IsEdited"/>
                </MudItem>

                // CATEGORIES
                <MudItem xs="12">
                    <MudSelect T="CategoryVM" ValueChanged="(cat) => OnCategoryChanged(cat)" Label="Kategorie">
                        @if (categories is not null)
                        {
                            foreach (var category in categories)
                            {
                                <MudSelectItem Value="@category">@category.Name</MudSelectItem>
                            }
                        }
                    </MudSelect>
                </MudItem>
            }
            else
            {
                <MudItem xs="12">
                    <MudPaper Outlined="true" Class="pa-3 ma-3">
                        <MudText Typo="Typo.h5">
                            @Doc.Title
                        </MudText>
                    </MudPaper>
                </MudItem>
                @* <PageHeaderComp Name="@Doc.Title"/> *@
                <MudFlexBreak/>
            }

            @if (IsEdited)
            {
                <MudItem xs="12">
                    <MudTextField Label="Krótki opis" HelperText="Max 1000 znaków" Lines="5"
                                  @bind-Value="@Doc.ShortDescription" For="@(() => Doc.ShortDescription)" Disabled="!IsEdited"/>
                </MudItem>
            }
            else if (!string.IsNullOrWhiteSpace(Doc.ShortDescription))
            {
                <MudItem xs="6">
                    <MudPaper Outlined="true" Class="pa-3 ma-3">
                        <MudText>
                            @Doc.ShortDescription
                        </MudText>
                    </MudPaper>
                </MudItem>
            }

            @if (IsEdited)
            {
                <MudItem xs="12">
                    <MudTextField Label="Opis" HelperText="Max 5000 znaków" Lines="15"
                                  @bind-Value="@Doc.Description" For="@(() => Doc.Description)"Disabled="!IsEdited"/>
                </MudItem>
            }
            else if (!string.IsNullOrWhiteSpace(Doc.Description))

            {
                <MudItem xs="6">
                    <MudPaper Outlined="true" Class="pa-3 ma-3">
                        <MudText>
                            @Doc.Description
                        </MudText>
                    </MudPaper>
                </MudItem>
            }

            @* </MudPaper> *@
            @* </MudItem> *@
            @*
            <SectionContent SectionId="@MainLayout.TopBarSectionRight">
            </SectionContent>
            *@

            @if (IsEdited)
            {
                <MudItem xs="12" Class="d-flex justify-end">
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Warning">Zapisz</MudButton>
                </MudItem>
            }
        </MudGrid>
    </EditForm>
}

@* ReSharper disable once InconsistentNaming *@