name: Build and deploy ASP.Net Core app to Azure Web App - docs-mac

on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        
        env:
            PATH_TO_PROJECT: Docs/Docs.csproj
        
        steps:
            - uses: actions/checkout@v4
            
            # SET UP DOT NET CORE
            - name: Set up .NET Core
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '8.0.x'
            
            # CLEAR NUGET CACHE (opcjonalnie)
            - name: Clear NuGet cache
              run: dotnet nuget locals all --clear
            
            # LOG DEBUG INFORMATION (opcjonalnie dla weryfikacji)
            - name: Log debug information
              run: |
                  echo "Environment variables:"
                  echo "PATH_TO_PROJECT: ${{ env.PATH_TO_PROJECT }}"
                  ls -la
            
            # SET TARGET FRAMEWORK IN DOCS.CSPROJ
            - name: Set target framework in Docs.csproj
              run: |
                  echo "Updating target framework to net8.0..."
                  sed -i 's|<TargetFramework>.*</TargetFramework>|<TargetFramework>net8.0</TargetFramework>|' ${{ env.PATH_TO_PROJECT }}
            
            # REMOVE DEPENDENCIES IF .NET 9
            - name: Remove dependencies if using .NET 9
              run: |
                     dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
#                     dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore
#                  dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.AspNetCore.Components.Authorization
#                  dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.AspNetCore.Identity.EntityFrameworkCore
#                  dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.Design
#                  dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.Tools
#                  dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.SqlServer
#                  dotnet remove ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.Analyzers
            
            # ADD DEPENDENCIES FOR .NET 8
            - name: Add dependencies for .NET 8
              run: |
                  dotnet add ${{ env.PATH_TO_PROJECT }} package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
                  dotnet add ${{ env.PATH_TO_PROJECT }} package Microsoft.AspNetCore.Identity.EntityFrameworkCore
                  dotnet add ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.Design
                  dotnet add ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.Tools
                  dotnet add ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.SqlServer
                  dotnet add ${{ env.PATH_TO_PROJECT }} package Microsoft.EntityFrameworkCore.Analyzers
            
            # RESTORE DEPENDENCIES AGAIN
            - name: Restore dependencies again
              run: dotnet restore ${{ env.PATH_TO_PROJECT }}
            
            # BUILD WITH DOTNET
            - name: Build with dotnet
              run: dotnet build ${{ env.PATH_TO_PROJECT }} --configuration Release
            
            # DOTNET PUBLISH
            - name: Dotnet publish
              run: dotnet publish ${{ env.PATH_TO_PROJECT }} -c Release -o ${{ env.DOTNET_ROOT }}/myapp
            
            # UPLOAD ARTIFACT FOR DEPLOYMENT JOB
            - name: Upload artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: .net-app
                  path: ${{ env.DOTNET_ROOT }}/myapp
    
    deploy:
        runs-on: ubuntu-latest
        needs: build
        environment:
            name: 'Production'
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
        
        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                  name: .net-app

            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v3
              with:
                  app-name: 'docs-mac'
                  slot-name: 'Production'
                  package: .
                  publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C725955FE1C6444D874C19A5265B420D }}